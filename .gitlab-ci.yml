image: python:latest

before_script:
  - python --version
  - export PATH="~/.local/bin/:/data/gitlab-runner/.conda/envs/experiment_analysis_mcnpy/bin:$PATH"
  - echo $PATH
  - conda activate experiment_analysis_mcnpy

after_script:
  - export PATH=$(echo "$PATH" | sed -e 's/:\/data\/gitlab-runner\/.conda\/envs\/experiment_analysis_mcnpy\/$//')
  - echo $PATH
  - conda deactivate

install:
  stage: build
  script:
    - echo "setting up conda"
    - conda create -n experiment_analysis_mcnpy python
    - echo "Installing dependencies"
    - which python
    - which pip
    - pip install -r requirements/dev.txt
    - python setup.py sdist bdist_wheel
    - pip install --user dist/*.whl --force-reinstall
      # test the extras installation
    - python setup.py install easy_install --user mcnpy[test]
    - python setup.py install easy_install --user mcnpy[doc]
    - pip freeze



unit_test:
  stage: test
  coverage: '/TOTAL.+ ([0-9\.]{1,5}%)/'
  script:
    - echo "Executing unit tests"
    - which python
    - pip freeze
    - coverage run --source mcnpy -m pytest --junitxml=test_report.xml
    - coverage report -m --precision=2
    - coverage xml
  artifacts:
    reports:
      junit: test_report.xml
      coverage_report:
         coverage_format: cobertura
         path: coverage.xml

doc_test:
   stage: test
   script:
      - if [[ -d doc/source/api ]]; then rm -r doc/source/api ; fi; 
      - echo "Executing Sphinx build to detect syntax errors"
      - sphinx-build doc/source/ doc/build/ -W --keep-going -E
      - sphinx-build -b html doc/source/ doc/build/html
      - mv doc/build/html html
   artifacts:
     expose_as: 'Updated Documentation'
     paths: 
       - html
     expire_in: 1 day

format_test:
  stage: test
  script: 
    - echo "Testing if anything is unformatted"
    - echo "If error occurs changes were not formatted using black"
    - black --check mcnpy/ tests/


deploy1:
  stage: deploy
  script:
    - echo "No deploy required for the moment"


pages:
  stage: deploy
  script:
    - echo "Building documentation with Sphinx."
    - cd doc/
    - if [[ -d doc/source/api ]]; then rm -r doc/source/api ; fi; 
    - make html
    - cd ..
    - mv doc/build/html public
    - python setup.py bdist_wheel
    - mv dist/ public/dist
  artifacts:
    paths:
      - public
  only:
    - master
    - main
    - doc
